문제 설명
정수 배열 numbers가 주어집니다. numbers에서 서로 다른 인덱스에 
있는 두 개의 수를 뽑아 더해서 만들 수 있는 모든 수를 배열에 오름차순으로
 담아 return 하도록 solution 함수를 완성해주세요.


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ


입출력 예
numbers		result
[2,1,3,4,1]	[2,3,4,5,6,7]
[5,0,2,7]	[2,5,7,9,12]



ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ


풀이 과정

1. numbers의 길이만큼 for문을 돌리고 두번째 수부터 시작하게 for문을 한 번 더 돌린다.
2. 만약 i와 j가 같다면 넘어가고 아니라면 sum함수에 담는다.
3. Set을 이용하여 배열의 중복이 되는 것을 제거한다.
4. sort함수를 이용하여 오름차순으로 나열한다.


코드

function solution(numbers) {
    let sum = [];
    let result = [];
    for(let i=0; i<numbers.length; i++){
        for(let j=1; j<numbers.length; j++){
            if(i===j){
                break;
            } else {
                sum.push(numbers[i] + numbers[j]);
            }
        }
    }
    result = [...new Set(sum)];
    result.sort((a,b)=> (a-b));
    return result;
}


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

다른 코드

function solution(numbers) {
    const temp = []

    for (let i = 0; i < numbers.length; i++) {
        for (let j = i + 1; j < numbers.length; j++) {
            temp.push(numbers[i] + numbers[j])
        }
    }

    const answer = [...new Set(temp)]

    return answer.sort((a, b) => a - b)


두번째 for문에서 j를 i+1으로 시작하면 if(i===j)과정을 줄일 수 있다.
